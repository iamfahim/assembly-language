;EXAMPLE 01: WRITE AN ASSEMBLY LANGUAGE PROGRAM TO READ A CHARACTER FROM KEYBOARD.

TITLE EX_O1: READ A CHARACTER
.MODEL SMALL
.STACK 100H
.DATA
.CODE
  MAIN PROC
  MOV AH,1H           ; READ CHARACTER FUNCTION
  INT 21H               ; CHARACTER IN AL
  MOV AH,4CH              ; DOS EXIT
INT 21H
MAIN ENDP
END MAIN

;EXAMPLE 02: WRITE A PROGRAM TO DISPLAY A SINGLE CHARACTER

TITLE EX_02: PRINT A SINGLE CHARACTER
.MODEL SMALL
.STACK 100H
.DATA
.CODE
  MAIN PROC
  MOV AH,2 ; DISPLAY CHARACTER FUNCTION
  MOV DL,'S'
  INT 21H
  MOV AH,4CH
  INT 21H
MAIN ENDP 
END MAIN


;EXAMPLE 03:WRITE A PROGRAM TO DISPLAY A LINE OF MESSAGE.

TITLE EX_03: DISPLAY A MESSAGE.
.MODEL SMALL
.STACK 100H
.DATA
 MSG DB 'CSTE$'
.CODE
 MAIN PROC
 MOV AX,@DATA
 MOV DS,AX
 LEA DX,MSG
 MOV AH,9H
 INT 21H
 MOV AH,4CH
 INT 21H
MAIN ENDP
END MAIN


;EXAMPLE 04: TO DISPLAY MORE THAN ONE MESSAGE IN DIFFERENT LINES.

TITLE EX_04: DISPLAY MORE THAN ONE MESSAGE.

.MODEL SMALL
.STACK 100H
.DATA 
MSG1 DB'CSTE DEPARTMENTS$'
MSG2 DB 0DH,0AH,'NSTU$'
.CODE
 MAIN PROC
 MOV AX,@DATA
 MOV DS,AX
LEA DX,MSG1
MOV AH,9H
INT 21H
LEA DX,MSG2
MOV AH,9H
INT 21H
MOV AH,4CH
INT 21H
MAIN ENDP
END MAIN

;EXAMPLE 05: DISPLAY PROGRAM CHEEK FLAGS. FIND ADD, SUB, NEG, AND INC OF A NUMBER USING DEBUG.

.MODEL SMALL
.STACK 100H
.DATA
.CODE
MAIN PROC
MOV AX,4000H ; AX=4000
ADD AX,AX ; AX=8000;
SUB AX,0001H
NEG AX
INC AX
MOV AH,4CH
INT 21H
MAIN ENDP
END MAIN

;EXAMPLE 06: WRITE A PROGRAM TO SUM OF TWO INTEGER NUMBERS

.MODEL SMALL
.STACK 100H
.DATA
 A DW 2
 B DW 5
 SUM DW?
.CODE
MAIN PROC
MOV AX,@DATA
MOV DS,AX
MOV AX,A
ADD AX,B
MOV SUM,AX
MOV AH,4CH
INT 21H
MAIN ENDP 
END MAIN


;EXAMPLE 07: TO READ A CHARACTER FROM KEYBOARD AND DISPLAY IT INTO NEXT LINE

.MODEL SMALL
.STACK 100H
.DATA 
.CODE
MIAN PROC
MOV AH,1
INT 21H
MOV BL,AL
MOV AH,2
MOV DL,0DH
INT 21H
MOV DL,0AH
INT 21H
MOV DL,BL
INT 21H
MOV AH,4CH
INT 21H
MIAN ENDP
END MAIN


;EXAMPLE 08: A CASE CONVERSION PROGRAM. ENTER A LOWER CASE LETTER AND WRITE IT IN UPPER CASE.

.MODEL SMALL
.STACK 100H
.DATA
MSG1 DB,'ENTER A LOWER CASE LETTER:$'
MSG2 DB,0DH,0AH,'IN UPPERCASE. IT IS:'
CHAR DB ?'$'
.CODE
MAIN PROC
MOV AX,@DATA
MOV DS,AX
LEA DX,MSG1
MOV AH,9H
INT 21H
MOV AH,1
INT 21H
SUB AL,20H
MOV CHAR,AL
LEA DX,MSG2
MOV AH,09H
INT 21H
MOV AH,4CH
INT 21H
MIAN ENDP
END MAIN

;;EXAMPLE 09: To write a program to display 'NSTU' 20 times.

Solution: 

.MODEL SMALL
STACK 100H
.DATA
  MSG DB 0DH,0AH,'NSTU$'
.CODE
 MAIN PROC
MOV AX,@DATA
MOV DX,AX
MOV CX,10
MOV AH,9H
LEA DX,MSG
TOP:
INT 21H
LOOP TOP
MOV AH,4CH
INT 21H
MAIN ENDP
  END MAIN
  
  
;;EXAMPLE 10: A Program to display 256 ASCII Character/Entire IBM character set.

solution:

.MODEL SMALL
.STACK 100H
.CODE
  MAIN PROC
  MOV AH,2
  MOV CX,256
  MOV DL,0
PRINT_LOOP:
 INT 21H
 INC DL
 DEC CX
 LOOP PRINT_LOOP
 MOV AH,4CH
 INT 21H
 MAIN PROC
 END MAIN
 
 
 ;EXAMPLE 11:; sUPPOSE AX AND BX CONTAIN SIGNED NIMBERS. WRITE SOME CODE TO PUT THE BIGGEST ONE IN CX.

SOLUTION:

.MODEL SMALL
.STACK 100H
.DATA
.CODE
 MAIN PROC
 MOV CX,AX
 CMP BX,CX
 JLE NEXT
 MOV CX,BX
 MOV AH,4CH
 INT 21H
MAIN ENDP
  END MAIN
 
 ;EXAMPLE 12:; IF AL CONTAIN 1 OR 3, DISPLAY '0'. IF AL CONTAINS 2 OR 4 DISPLAY 'E'.

SOLUTION:


.MODEL SMALL
.STACK 100H
.CODE
CMP AL,1
JE ODD
CMP AL,3
JE ODD
CMP AL,2
JE EVEN
CMP AL,4
JE EVEN
JMP EXIT
ODD:
  MOV DL,'0'
  JMP DISPLAY
EVEN:
  MOV DL,'E'
  JMP DISPLAY
DISPLAY:
  MOV AH,2
  INT 21H
EXIT:
  MOV AH,4CH
  INT 21H
  MAIN ENDP
	END MAIN
 
 
 ;EXAMPLE 13:; READ A CHARACTER. IF IT IS 'y' OR 'Y' DISPLAY IT; OTHERWISE TERMINATE THE PROGRAM.
 
SOLUTION:

.MODEL SMALL
.STACK 100H
.DATA
.CODE
  MAIN PROC
  MOV AH,1
  INT 21H
  CMP AL,'y'
  JE THEN
  CMP AL,'Y'
  JE THEN
  JMP ELSE_
THEN:
 MOV AH,2
 MOV DL,AL
 INT 21H
 JMP ENDIF
ELSE_:
 MOV AH,4CH
INT 21H
 
 
 ;EXAMPLE 14:; WRITE A COUNT-CONTROLLED LOOP TO DISPLAY A ROW OF 80 STARS.

SOLUTION: 

.MODEL SMALL
.STACK 100H
.DATA
.CODE
 MAIN PROC
 MOV CX,80
 MOV AH,2
 MOV DL,'*'

TOP:
INT 21H
LOOP TOP
MOV AH,4CH
INT 21H
MAIN ENDP
END MAIN
 
 ;EXAMPLE 15:; WRITE A PROGRAM TO DISPLAY THE CHARACTER THAT IS TO BE INPUTTED BEFORE PRESSING ENTER KEY.
SOLUTION:

.MODEL SMALL
.STACK 100H
.DATA
.CODE
  MAIN PROC
  MOV AH,1
REPEAT:
 CMP AL,' '
 JNE REPEAT
 INT 21H
 LOOP REPEAT
 MOV AH,4CH
 INT 21H
MAIN ENDP
 END MAIN

 
 ;EXAMPLE 16:; WRITE A PROGRAM TO DISPLAY THE CHARACTER THAT IS TO BE INPUTTED BEFORE PRESSING ENTER KEY.

SOLUTION:

.MODEL SMALL
.STACK 100H
.DATA
.CODE
  MAIN PROC
  MOV AH,1
TOP:
  CMP AL,ODH
  JE ENDLOOP
  INT 21H
  LOOP TOP
  MOV AH,4CH
  INT 21H
MAIN ENDP
  END MAIN
 
 ;EXAMPLE 17:; IF AX CONTAINS A NEGATIVE NUMBER, PUT -1 IN BX, IF AX CONTAINS 0, PUT 0 IN BX; IF AX CONTAINS A POSITIVE NUMBER, PUT 1 IN BX.

SOLUTION: 
.MODEL SMALL
.STACK 100H
.DATA
.CODE
  MAIN PROC
  CMP AX,0
  JL NEGATIVE
  JE ZERO
  JG POSITIVE
NEGATIVE:
MOV BX,-1
JMP DISPLAY
ZERO:
  MOV BX,0
JMP DISPLAY
 POSITIVE:
  MOV DL,'1'
DISPLAY:
  MOV AH,4
  INT 21H
MAIN ENDP
  END MAIN
 
 ;EXAMPLE 18:; WRITE A PROGRAM TO FIND THE FACTORIAL VALUE OF A NUMBER USING FACTORIAL FUNCTION.

SOLUTION:

.MODEL SMALL
.STACK 100H
.DATA
.CODE
  FACTORIAL PROC
  MOV AX,1
TOP:
  MUL CX
  LOOP TOP
  RET
  FACTORIAL ENDP
    END MAIN
 
 ;EXAMPLE 19:; WRITE SOME CODE TO SUM IN AX THE ELEMENT OF THE 10 ELEMENT ARRAY W DEFINE BY
; W DW 10,20,30,40,50,60,70,80,90,100

SOLUTION:
.MODEL SMALL
.STACK 100H
.DATA
  W DW 10,20,30,40,50,60,70,80,90,100
.CODE 
 MAIN PROC
 MOV AX,@DATA
 MOV DS,AX
 XOR AX,AX
 LEA SI,W
 MOV CX,10
TOP:
  ADD AX,[SI]
  ADD SI,2
  LOOP TOP
  MOV AH,4CH
  INT 21H
MAIN ENDP
  END MAIN
 
 ;EXAMPLE 20:; WRITE A PROGRAM TO READ A SEQUENCE OF CHARACTER AND DISPLAY THEM INTO REVERSE ORDER ON THE NEXT LINE.
SOLUTION:
.MODEL SMALL
.STACK 100H
.CODE
  MAIN PROC
  MOV AH,2
  MOV DL,'?'
  INT 21H
  XOR CX,CX
  MOV AH,1
  INT 21H
WHILE_:
  CMP AL,0DH
  JE ENDWHILE_
  PUSH AX
  INC CX
  INT 21H
  JMP WHILE_
  MOV AH,2
  MOV DL,0DH
  INT 21H
  MOV 0AH
  INT 21H
  JCXZ EXIT

TOP: 
  POP DX
  INT 21H
  LOOP TOP
EXIT_:
  MOV AH,4CH
  INT 21H
  MAIN ENDP
    END MAIN
 
 